{"version":3,"sources":["webpack:///../components/Text/docs/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","TagVersion","Explain","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isCopyable","__position","__code","__scope","Text","List","Table","Playground","Props","wrapper","status","map","key","tag","public","columns","data","footer","style","marginTop","theme","height","borderTop","display","alignItems","justifyContent","isMDXComponent"],"mappings":"oTAWaA,G,UAAe,S,gNAE5B,IAAMC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAUN,EAAc,WACxBO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,UAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,kBACE,GAAM,QADR,QAGA,YAACP,EAAD,CAAYQ,UAAU,OAAOD,QAAQ,eACrC,kBACE,GAAM,kBADR,kBAGA,YAACN,EAAD,CAASO,UAAU,OAAOC,YAAU,EAACF,QAAQ,YAC7C,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,4BAA6BC,SAAO,GACrEf,QACAO,kBACAS,SACAC,SACAC,UACAC,eACAC,WAPqE,gBAQrEb,IARqE,EASrEV,eATqE,GAUpEwB,QAAQ,OAAOX,QAAQ,cAC5B,YAAC,IAAD,CAAMA,QAAQ,QAAd,iBAEE,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,mQAA8QC,SAAO,GACtTf,QACAO,kBACAS,SACAC,SACAC,UACAC,eACAC,WAPsT,gBAQtTb,IARsT,EAStTV,eATsT,GAUrTwB,QAAQ,SAASX,QAAQ,cAC9B,YAAC,IAAD,CAAMY,OAAO,UAAUZ,QAAQ,QAA/B,wBACA,YAAC,IAAD,CAAMY,OAAO,UAAUZ,QAAQ,QAA/B,wBACA,YAAC,IAAD,CAAMY,OAAO,UAAUZ,QAAQ,QAA/B,wBACA,YAAC,IAAD,CAAMY,OAAO,QAAQZ,QAAQ,QAA7B,sBACA,YAAC,IAAD,CAAMY,OAAO,WAAWZ,QAAQ,QAAhC,0BAEE,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,iMAA4MC,SAAO,GACpPf,QACAO,kBACAS,SACAC,SACAC,UACAC,eACAC,WAPoP,gBAQpPb,IARoP,EASpPV,eAToP,GAUnPwB,QAAQ,aAAaX,QAAQ,cAClC,YAAC,IAAD,CAAMA,QAAQ,QACX,CAAC,UAAW,UAAW,UAAW,QAAS,YAAYa,KAAI,SAAAD,GAAM,OAAI,YAAC,IAAD,CAAMA,OAAQA,EAAQE,IAAKF,EAAQG,IAAI,KAAKf,QAAQ,QAApD,6BAGtE,kBACE,GAAM,SADR,SAGA,4BACD,CAACU,IAAMM,QAAQH,KAAI,gBACdI,EADc,EACdA,QACAC,EAFc,EAEdA,KACAC,EAHc,EAGdA,OAHc,OAIV,mBAAKC,MAAO,CAChBC,UAAW,KAEX,YAAC,IAAD,CAAOC,MAAM,OAAOL,QAASA,EAASC,KAAMA,EAAMC,OAAQ,kBAAM,mBAAKC,MAAO,CAC1EG,OAAQ,GACRC,UAAW,kBACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAEXR,IACKnB,QAAQ,qB,8MAO5BF,EAAW8B,gBAAiB","file":"component---components-text-docs-index-mdx-a5ff799ce2202d2a0b27.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/markyctian/nes-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Text, List, Table } from '@components';\nimport { Playground } from 'docz';\nimport { Props } from './config';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TagVersion = makeShortcode(\"TagVersion\");\nconst Explain = makeShortcode(\"Explain\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"text\"\n    }}>{`Text`}</h2>\n    <TagVersion component=\"Text\" mdxType=\"TagVersion\" />\n    <h2 {...{\n      \"id\": \"use-and-import\"\n    }}>{`Use and Import`}</h2>\n    <Explain component=\"Text\" isCopyable mdxType=\"Explain\" />\n    <h2 {...{\n      \"id\": \"case\"\n    }}>{`Case`}</h2>\n    <Playground __position={2} __code={'<Text>This is Text</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Text,\n      List,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Text\" mdxType=\"Playground\">\n  <Text mdxType=\"Text\">This is Text</Text>\n    </Playground>\n    <Playground __position={3} __code={'<Text status=\\\"primary\\\">This is primary Text</Text>\\n<Text status=\\\"success\\\">This is success Text</Text>\\n<Text status=\\\"warning\\\">This is warning Text</Text>\\n<Text status=\\\"error\\\">This is error Text</Text>\\n<Text status=\\\"disabled\\\">This is disabled Text</Text>'} __scope={{\n      props,\n      DefaultLayout,\n      Text,\n      List,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Status\" mdxType=\"Playground\">\n  <Text status=\"primary\" mdxType=\"Text\">This is primary Text</Text>\n  <Text status=\"success\" mdxType=\"Text\">This is success Text</Text>\n  <Text status=\"warning\" mdxType=\"Text\">This is warning Text</Text>\n  <Text status=\"error\" mdxType=\"Text\">This is error Text</Text>\n  <Text status=\"disabled\" mdxType=\"Text\">This is disabled Text</Text>\n    </Playground>\n    <Playground __position={4} __code={'<List>\\n  {[\\'primary\\', \\'success\\', \\'success\\', \\'error\\', \\'disabled\\'].map(status => (\\n    <Text status={status} key={status} tag=\\\"li\\\">\\n      This is primary Text\\n    </Text>\\n  ))}\\n</List>'} __scope={{\n      props,\n      DefaultLayout,\n      Text,\n      List,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Custom Tag\" mdxType=\"Playground\">\n  <List mdxType=\"List\">\n    {['primary', 'success', 'success', 'error', 'disabled'].map(status => <Text status={status} key={status} tag=\"li\" mdxType=\"Text\">This is primary Text</Text>)}\n  </List>\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <>\n  {[Props.public].map(({\n        columns,\n        data,\n        footer\n      }) => <div style={{\n        marginTop: 20\n      }}>\n        <Table theme=\"dark\" columns={columns} data={data} footer={() => <div style={{\n          height: 60,\n          borderTop: '4px solid white',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n              {footer}\n            </div>} mdxType=\"Table\" />\n      </div>)}\n    </>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
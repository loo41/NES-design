{"version":3,"sources":["webpack:///../components/Table/docs/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","TagVersion","Explain","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isCopyable","__position","__code","__scope","Table","Text","Icon","Playground","Props","wrapper","columns","title","dataIndex","key","render","status","style","marginTop","data","age","address","width","theme","scroll","x","fixed","href","expandable","expandedRowRender","i","push","date","expandIcon","defaultExpandAllRows","fontWeight","tag","public","map","footer","height","borderTop","display","alignItems","justifyContent","isMDXComponent"],"mappings":"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","file":"component---components-table-docs-index-mdx-7271e547b3091e71160e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/markyctian/nes-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Table, Text, Icon } from '@components';\nimport { Playground } from 'docz';\nimport { Props } from './config';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TagVersion = makeShortcode(\"TagVersion\");\nconst Explain = makeShortcode(\"Explain\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h2>\n    <TagVersion component=\"Table\" mdxType=\"TagVersion\" />\n    <h2 {...{\n      \"id\": \"use-and-import\"\n    }}>{`Use and Import`}</h2>\n    <Explain component=\"Table\" isCopyable mdxType=\"Explain\" />\n    <h2 {...{\n      \"id\": \"case\"\n    }}>{`Case`}</h2>\n    <Playground __position={2} __code={'() => {\\n  const columns = [\\n    {\\n      title: \\'Name\\',\\n      dataIndex: \\'name\\',\\n      key: \\'name\\',\\n    },\\n    {\\n      title: \\'Age\\',\\n      dataIndex: \\'age\\',\\n      key: \\'age\\',\\n    },\\n    {\\n      title: \\'Address\\',\\n      dataIndex: \\'address\\',\\n      key: \\'address\\',\\n    },\\n    {\\n      title: \\'Operations\\',\\n      dataIndex: \\'\\',\\n      key: \\'operations\\',\\n      render: () => <Text status=\\\"error\\\">Delete</Text>,\\n    },\\n  ]\\n  const data = [\\n    { name: \\'Bruce Lee\\', age: \\'-\\', address: \\'China - USA\\', key: \\'Bruce Lee\\' },\\n    {\\n      name: \\'Jackie Chan\\',\\n      age: \\'-\\',\\n      address: \\'beijin China\\',\\n      key: \\'Jackie Chan\\',\\n    },\\n  ]\\n  return <Table columns={columns} style={{ marginTop: 50 }} data={data} />\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      Text,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Table\" mdxType=\"Playground\">\n  {() => {\n        const columns = [{\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: 'Age',\n          dataIndex: 'age',\n          key: 'age'\n        }, {\n          title: 'Address',\n          dataIndex: 'address',\n          key: 'address'\n        }, {\n          title: 'Operations',\n          dataIndex: '',\n          key: 'operations',\n          render: () => <Text status=\"error\" mdxType=\"Text\">Delete</Text>\n        }];\n        const data = [{\n          name: 'Bruce Lee',\n          age: '-',\n          address: 'China - USA',\n          key: 'Bruce Lee'\n        }, {\n          name: 'Jackie Chan',\n          age: '-',\n          address: 'beijin China',\n          key: 'Jackie Chan'\n        }];\n        return <Table columns={columns} style={{\n          marginTop: 50\n        }} data={data} mdxType=\"Table\" />;\n      }}\n    </Playground>\n    <Playground __position={3} __code={'() => {\\n  const columns = [\\n    {\\n      title: \\'Name\\',\\n      dataIndex: \\'name\\',\\n      key: \\'name\\',\\n    },\\n    {\\n      title: \\'Age\\',\\n      dataIndex: \\'age\\',\\n      key: \\'age\\',\\n    },\\n    {\\n      title: \\'Address\\',\\n      dataIndex: \\'address\\',\\n      key: \\'address\\',\\n      width: 1000,\\n    },\\n    {\\n      title: \\'Operations\\',\\n      dataIndex: \\'\\',\\n      key: \\'operations\\',\\n      width: 1000,\\n      render: () => <Text status=\\\"error\\\">Delete</Text>,\\n    },\\n  ]\\n  const data = [\\n    { name: \\'Bruce Lee\\', age: \\'-\\', address: \\'China - USA\\', key: \\'Bruce Lee\\' },\\n    {\\n      name: \\'Jackie Chan\\',\\n      age: \\'-\\',\\n      address: \\'beijin China\\',\\n      key: \\'Jackie Chan\\',\\n    },\\n  ]\\n  return (\\n    <Table columns={columns} theme=\\\"dark\\\" scroll={{ x: 2000 }} data={data} />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      Text,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Scroll Table\" mdxType=\"Playground\">\n  {() => {\n        const columns = [{\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name'\n        }, {\n          title: 'Age',\n          dataIndex: 'age',\n          key: 'age'\n        }, {\n          title: 'Address',\n          dataIndex: 'address',\n          key: 'address',\n          width: 1000\n        }, {\n          title: 'Operations',\n          dataIndex: '',\n          key: 'operations',\n          width: 1000,\n          render: () => <Text status=\"error\" mdxType=\"Text\">Delete</Text>\n        }];\n        const data = [{\n          name: 'Bruce Lee',\n          age: '-',\n          address: 'China - USA',\n          key: 'Bruce Lee'\n        }, {\n          name: 'Jackie Chan',\n          age: '-',\n          address: 'beijin China',\n          key: 'Jackie Chan'\n        }];\n        return <Table columns={columns} theme=\"dark\" scroll={{\n          x: 2000\n        }} data={data} mdxType=\"Table\" />;\n      }}\n    </Playground>\n    <Playground __position={4} __code={'() => {\\n  const columns = [\\n    {\\n      title: \\'Name\\',\\n      dataIndex: \\'name\\',\\n      fixed: true,\\n      width: 200,\\n      key: \\'name\\',\\n    },\\n    {\\n      title: \\'Age\\',\\n      dataIndex: \\'age\\',\\n      width: 200,\\n      fixed: \\'left\\',\\n      key: \\'age\\',\\n    },\\n    {\\n      title: \\'Address\\',\\n      dataIndex: \\'address\\',\\n      width: 1000,\\n      key: \\'address\\',\\n    },\\n    {\\n      title: \\'Operations\\',\\n      dataIndex: \\'\\',\\n      key: \\'operations\\',\\n      render: () => <a href=\\\"#\\\">Delete</a>,\\n    },\\n  ]\\n  const data = [\\n    { name: \\'Bruce Lee\\', age: \\'-\\', address: \\'China - USA\\', key: \\'Bruce Lee\\' },\\n    {\\n      name: \\'Jackie Chan\\',\\n      age: \\'-\\',\\n      address: \\'beijin China\\',\\n      key: \\'Jackie Chan\\',\\n    },\\n  ]\\n  return (\\n    <>\\n      <Table\\n        columns={columns}\\n        scroll={{ x: 2000 }}\\n        theme=\\\"dark\\\"\\n        data={data}\\n      />\\n      <Table\\n        columns={columns}\\n        scroll={{ x: 2000 }}\\n        style={{ marginTop: 50 }}\\n        data={data}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      Text,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Fixed Table\" mdxType=\"Playground\">\n  {() => {\n        const columns = [{\n          title: 'Name',\n          dataIndex: 'name',\n          fixed: true,\n          width: 200,\n          key: 'name'\n        }, {\n          title: 'Age',\n          dataIndex: 'age',\n          width: 200,\n          fixed: 'left',\n          key: 'age'\n        }, {\n          title: 'Address',\n          dataIndex: 'address',\n          width: 1000,\n          key: 'address'\n        }, {\n          title: 'Operations',\n          dataIndex: '',\n          key: 'operations',\n          render: () => <a href=\"#\">Delete</a>\n        }];\n        const data = [{\n          name: 'Bruce Lee',\n          age: '-',\n          address: 'China - USA',\n          key: 'Bruce Lee'\n        }, {\n          name: 'Jackie Chan',\n          age: '-',\n          address: 'beijin China',\n          key: 'Jackie Chan'\n        }];\n        return <>\n        <Table columns={columns} scroll={{\n            x: 2000\n          }} theme=\"dark\" data={data} mdxType=\"Table\" />\n        <Table columns={columns} scroll={{\n            x: 2000\n          }} style={{\n            marginTop: 50\n          }} data={data} mdxType=\"Table\" />\n      </>;\n      }}\n    </Playground>\n    <Playground __position={5} __code={'() => {\\n  const expandedRowRender = () => {\\n    const columns = [\\n      { title: \\'Date\\', dataIndex: \\'date\\', key: \\'date\\' },\\n      { title: \\'Name\\', dataIndex: \\'name\\', key: \\'name\\' },\\n    ]\\n    const data = []\\n    for (let i = 0; i < 3; ++i) {\\n      data.push({\\n        key: i,\\n        date: \\'2014-12-24 23:12:00\\',\\n        name: \\'not Name\\',\\n      })\\n    }\\n    return <Table columns={columns} theme=\\\"dark\\\" data={data} />\\n  }\\n  const expandIcon = () => <Icon name=\\\"star\\\" />\\n  const columns = [\\n    { title: \\'Date\\', dataIndex: \\'date\\', key: \\'date\\' },\\n    { title: \\'Name\\', dataIndex: \\'name\\', key: \\'name\\' },\\n  ]\\n  const data = [\\n    { name: \\'Bruce Lee\\', age: \\'-\\', address: \\'China - USA\\', key: \\'Bruce Lee\\' },\\n    {\\n      name: \\'Jackie Chan\\',\\n      age: \\'-\\',\\n      address: \\'beijin China\\',\\n      key: \\'Jackie Chan\\',\\n    },\\n  ]\\n  return (\\n    <Table\\n      columns={columns}\\n      theme=\\\"dark\\\"\\n      expandable={{\\n        expandedRowRender,\\n        expandIcon,\\n        defaultExpandAllRows: true,\\n      }}\\n      data={data}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Table,\n      Text,\n      Icon,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"More Table\" mdxType=\"Playground\">\n  {() => {\n        const expandedRowRender = () => {\n          const columns = [{\n            title: 'Date',\n            dataIndex: 'date',\n            key: 'date'\n          }, {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name'\n          }];\n          const data = [];\n\n          for (let i = 0; i < 3; ++i) {\n            data.push({\n              key: i,\n              date: '2014-12-24 23:12:00',\n              name: 'not Name'\n            });\n          }\n\n          return <Table columns={columns} theme=\"dark\" data={data} mdxType=\"Table\" />;\n        };\n\n        const expandIcon = () => <Icon name=\"star\" mdxType=\"Icon\" />;\n\n        const columns = [{\n          title: 'Date',\n          dataIndex: 'date',\n          key: 'date'\n        }, {\n          title: 'Name',\n          dataIndex: 'name',\n          key: 'name'\n        }];\n        const data = [{\n          name: 'Bruce Lee',\n          age: '-',\n          address: 'China - USA',\n          key: 'Bruce Lee'\n        }, {\n          name: 'Jackie Chan',\n          age: '-',\n          address: 'beijin China',\n          key: 'Jackie Chan'\n        }];\n        return <Table columns={columns} theme=\"dark\" expandable={{\n          expandedRowRender,\n          expandIcon,\n          defaultExpandAllRows: true\n        }} data={data} mdxType=\"Table\" />;\n      }}\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Text status=\"error\" style={{\n      fontWeight: 'bold'\n    }} mdxType=\"Text\">\n  Table component extends rc-table, default support rc-table all attrs\n    </Text>\n    <Text tag=\"a\" href=\"https://www.npmjs.com/package/rc-table\" mdxType=\"Text\">\n  See More Properties\n    </Text>\n    <>\n  {[Props.public].map(({\n        columns,\n        data,\n        footer\n      }) => <div style={{\n        marginTop: 20\n      }}>\n        <Table theme=\"dark\" columns={columns} data={data} footer={() => <div style={{\n          height: 60,\n          borderTop: '4px solid white',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n              {footer}\n            </div>} mdxType=\"Table\" />\n      </div>)}\n    </>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
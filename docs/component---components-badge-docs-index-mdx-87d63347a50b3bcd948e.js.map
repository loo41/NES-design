{"version":3,"sources":["webpack:///../components/Badge/docs/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","TagVersion","Explain","Icon","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isCopyable","__position","__code","__scope","Playground","Badge","Table","Props","wrapper","options","status","children","type","public","map","columns","data","footer","style","marginTop","theme","height","borderTop","display","alignItems","justifyContent","isMDXComponent"],"mappings":"uSAWaA,G,UAAe,S,iNAE5B,IAAMC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAUN,EAAc,WACxBO,EAAOP,EAAc,QACrBQ,EAAc,CAClBT,gBAEIU,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGV,EACF,8BACD,OAAO,YAACO,EAAD,eAAeD,EAAiBN,EAAhC,CAAuCU,WAAYA,EAAYC,QAAQ,cAI5E,kBACE,GAAM,SADR,SAGA,YAACR,EAAD,CAAYS,UAAU,QAAQD,QAAQ,eACtC,kBACE,GAAM,kBADR,kBAGA,YAACP,EAAD,CAASQ,UAAU,QAAQC,YAAU,EAACF,QAAQ,YAC9C,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,oGAAyGC,SAAO,GACjJhB,QACAQ,kBACAS,eACAC,UACAC,UACAC,WANiJ,gBAOjJZ,IAPiJ,EAQjJX,eARiJ,GAShJwB,QAAQ,QAAQV,QAAQ,cAC7B,YAAC,IAAD,CAAOW,QAAS,CAAC,CACXC,OAAQ,UACRC,SAAU,UACRb,QAAQ,WAEd,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,saAAqbC,SAAO,GAC7dhB,QACAQ,kBACAS,eACAC,UACAC,UACAC,WAN6d,gBAO7dZ,IAP6d,EAQ7dX,eAR6d,GAS5dwB,QAAQ,OAAOV,QAAQ,cAC5B,uBACE,YAAC,IAAD,CAAOc,KAAK,QAAQH,QAAS,CAAC,CACxBC,OAAQ,OACRC,SAAU,OACT,CACDD,OAAQ,UACRC,SAAU,UACRb,QAAQ,WAElB,YAAC,IAAD,CAAOc,KAAK,OAAOH,QAAS,CAAC,CACvBC,OAAQ,UACRC,SAAU,YAACnB,EAAD,CAAMN,KAAK,SAASY,QAAQ,UACrC,CACDY,OAAQ,UACRC,SAAU,WACRb,QAAQ,WAEd,kBACE,GAAM,SADR,SAGA,4BACD,CAACS,IAAMM,OAAQN,IAAME,SAASK,KAAI,gBAC7BC,EAD6B,EAC7BA,QACAC,EAF6B,EAE7BA,KACAC,EAH6B,EAG7BA,OAH6B,OAIzB,mBAAKC,MAAO,CAChBC,UAAW,KAEX,YAAC,IAAD,CAAOC,MAAM,OAAOL,QAASA,EAASC,KAAMA,EAAMC,OAAQ,kBAAM,mBAAKC,MAAO,CAC1EG,OAAQ,GACRC,UAAW,kBACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,WAEXR,IACKnB,QAAQ,qB,+MAO5BF,EAAW8B,gBAAiB","file":"component---components-badge-docs-index-mdx-87d63347a50b3bcd948e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/markyctian/nes-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Badge, Table } from '@components';\nimport { Props } from './config';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TagVersion = makeShortcode(\"TagVersion\");\nconst Explain = makeShortcode(\"Explain\");\nconst Icon = makeShortcode(\"Icon\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"badge\"\n    }}>{`Badge`}</h2>\n    <TagVersion component=\"Badge\" mdxType=\"TagVersion\" />\n    <h2 {...{\n      \"id\": \"use-and-import\"\n    }}>{`Use and Import`}</h2>\n    <Explain component=\"Badge\" isCopyable mdxType=\"Explain\" />\n    <h2 {...{\n      \"id\": \"case\"\n    }}>{`Case`}</h2>\n    <Playground __position={2} __code={'<Badge\\n  options={[\\n    {\\n      status: \\'primary\\',\\n      children: \\'Badge\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Badge,\n      Table,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Badge\" mdxType=\"Playground\">\n  <Badge options={[{\n        status: 'primary',\n        children: 'Badge'\n      }]} mdxType=\"Badge\" />\n    </Playground>\n    <Playground __position={3} __code={'<div>\\n  <Badge\\n    type=\\\"split\\\"\\n    options={[\\n      {\\n        status: \\'dark\\',\\n        children: \\'Npm\\',\\n      },\\n      {\\n        status: \\'success\\',\\n        children: \\'1.0.0\\',\\n      },\\n    ]}\\n  />\\n</div>\\n<Badge\\n  type=\\\"icon\\\"\\n  options={[\\n    {\\n      status: \\'primary\\',\\n      children: <Icon name=\\\"github\\\" />,\\n    },\\n    {\\n      status: \\'success\\',\\n      children: \\'GitHub\\',\\n    },\\n  ]}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Badge,\n      Table,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Type\" mdxType=\"Playground\">\n  <div>\n    <Badge type=\"split\" options={[{\n          status: 'dark',\n          children: 'Npm'\n        }, {\n          status: 'success',\n          children: '1.0.0'\n        }]} mdxType=\"Badge\" />\n  </div>\n  <Badge type=\"icon\" options={[{\n        status: 'primary',\n        children: <Icon name=\"github\" mdxType=\"Icon\" />\n      }, {\n        status: 'success',\n        children: 'GitHub'\n      }]} mdxType=\"Badge\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <>\n  {[Props.public, Props.options].map(({\n        columns,\n        data,\n        footer\n      }) => <div style={{\n        marginTop: 20\n      }}>\n        <Table theme=\"dark\" columns={columns} data={data} footer={() => <div style={{\n          height: 60,\n          borderTop: '4px solid white',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n              {footer}\n            </div>} mdxType=\"Table\" />\n      </div>)}\n    </>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}
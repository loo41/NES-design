{"version":3,"sources":["webpack:///../components/Input/docs/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","TagVersion","Explain","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","component","isCopyable","status","__position","__code","__scope","Input","TextArea","Text","Table","Playground","Props","wrapper","useState","value","setValue","style","display","marginLeft","onChange","e","target","placeholder","inputType","disabled","addonBefore","width","height","alignItems","fontWeight","addonAfter","justifyContent","map","type","key","theme","public","input","textarea","columns","data","footer","marginTop","borderTop","isMDXComponent"],"mappings":"sTAWaA,G,UAAe,S,iNAE5B,IAAMC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAaL,EAAc,cAC3BM,EAAUN,EAAc,WACxBO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,cAFDC,EAEC,EAFDA,WACGT,EACF,8BACD,OAAO,YAACM,EAAD,eAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAI5E,kBACE,GAAM,SADR,SAGA,YAACP,EAAD,CAAYQ,UAAU,QAAQD,QAAQ,eACtC,kBACE,GAAM,kBADR,kBAGA,YAACN,EAAD,CAASO,UAAU,QAAQC,YAAU,EAACF,QAAQ,YAC9C,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAMG,OAAO,QAAQH,QAAQ,QAA7B,2FACA,YAAC,IAAD,CAAMG,OAAO,QAAQH,QAAQ,QAA7B,uCACA,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,ijBAA0jBC,SAAO,GAClmBhB,QACAO,kBACAU,UACAC,aACAC,SACAC,UACAC,eACAC,WARkmB,gBASlmBf,IATkmB,EAUlmBV,eAVkmB,GAWjmB0B,QAAQ,mBAAmBb,QAAQ,eACvC,WACK,MAA0Bc,SAAS,IAA5BC,EAAP,KAAcC,EAAd,KACA,OAAO,4BACL,mBAAKC,MAAO,CACVC,QAAS,SADX,gBAEgB,YAAC,IAAD,CAAMD,MAAO,CACzBE,WAAY,IACXhB,OAAO,UAAUH,QAAQ,QAAQe,IACtC,YAAC,IAAD,CAAOA,MAAOA,EAAOK,SAAU,SAAAC,GAAC,OAAIL,EAASK,EAAEC,OAAOP,QAAQQ,YAAY,QAAQvB,QAAQ,UAC1F,YAAC,IAAD,CAAUe,MAAOA,EAAOS,UAAU,WAAWD,YAAY,WAAWH,SAAU,SAAAC,GAAC,OAAIL,EAASK,EAAEC,OAAOP,QAAQf,QAAQ,iBAI3H,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,2QAA8RC,SAAO,GACtUhB,QACAO,kBACAU,UACAC,aACAC,SACAC,UACAC,eACAC,WARsU,gBAStUf,IATsU,EAUtUV,eAVsU,GAWrU0B,QAAQ,SAASb,QAAQ,cAC9B,YAAC,IAAD,CAAOuB,YAAY,OAAOvB,QAAQ,UAClC,YAAC,IAAD,CAAOG,OAAO,UAAUoB,YAAY,UAAUvB,QAAQ,UACtD,YAAC,IAAD,CAAUwB,UAAU,WAAWrB,OAAO,UAAUoB,YAAY,uBAAuBvB,QAAQ,aAC3F,YAAC,IAAD,CAAOG,OAAO,QAAQoB,YAAY,QAAQvB,QAAQ,UAClD,YAAC,IAAD,CAAOyB,UAAQ,EAACF,YAAY,WAAWvB,QAAQ,WAE7C,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,giBAAmjBC,SAAO,GAC3lBhB,QACAO,kBACAU,UACAC,aACAC,SACAC,UACAC,eACAC,WAR2lB,gBAS3lBf,IAT2lB,EAU3lBV,eAV2lB,GAW1lB0B,QAAQ,SAASb,QAAQ,cAC9B,YAAC,IAAD,CAAO0B,YAAa,mBAAKT,MAAO,CAC1BU,MAAO,IACPT,QAAS,OACTU,OAAQ,OACRC,WAAY,SACZC,WAAY,SALE,iBAQR9B,QAAQ,UACpB,YAAC,IAAD,CAAOwB,UAAU,WAAWO,WAAY,mBAAKd,MAAO,CAC9CU,MAAO,IACPT,QAAS,OACTU,OAAQ,OACRC,WAAY,SACZC,WAAY,OACZE,eAAgB,WANkB,gBAS5BhC,QAAQ,WAElB,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,mcAAwdC,SAAO,GAChgBhB,QACAO,kBACAU,UACAC,aACAC,SACAC,UACAC,eACAC,WARggB,gBAShgBf,IATggB,EAUhgBV,eAVggB,GAW/f0B,QAAQ,aAAab,QAAQ,cAClC,4BACG,CAAC,OAAQ,OAAQ,WAAY,WAAY,OAAQ,SAASiC,KAAI,SAAAC,GAAI,OAAI,YAAC,IAAD,CAAOC,IAAKD,EAAMX,YAAaW,EAAMA,KAAMA,EAAMR,YAAa,mBAAKT,MAAO,CAC3IU,MAAO,IACPT,QAAS,OACTU,OAAQ,OACRC,WAAY,SACZC,WAAY,SAETI,GACKlC,QAAQ,eAGtB,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,6GAAwHC,SAAO,GAChKhB,QACAO,kBACAU,UACAC,aACAC,SACAC,UACAC,eACAC,WARgK,gBAShKf,IATgK,EAUhKV,eAVgK,GAW/J0B,QAAQ,QAAQb,QAAQ,cAC7B,YAAC,IAAD,CAAUwB,UAAU,WAAWY,MAAM,OAAOpC,QAAQ,aACpD,YAAC,IAAD,CAAOoC,MAAM,OAAOjC,OAAO,UAAUoB,YAAY,OAAOvB,QAAQ,WAE9D,kBACE,GAAM,SADR,SAGA,4BACD,CAACY,IAAMyB,OAAQzB,IAAM0B,MAAO1B,IAAM2B,UAAUN,KAAI,gBAC3CO,EAD2C,EAC3CA,QACAC,EAF2C,EAE3CA,KACAC,EAH2C,EAG3CA,OAH2C,OAIvC,mBAAKzB,MAAO,CAChB0B,UAAW,KAEX,YAAC,IAAD,CAAOP,MAAM,OAAOI,QAASA,EAASC,KAAMA,EAAMC,OAAQ,kBAAM,mBAAKzB,MAAO,CAC1EW,OAAQ,GACRgB,UAAW,kBACX1B,QAAS,OACTW,WAAY,SACZG,eAAgB,WAEXU,IACK1C,QAAQ,qB,+MAO5BF,EAAW+C,gBAAiB","file":"component---components-input-docs-index-mdx-33d21823af189db0adaa.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/markyctian/nes-design/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Input, TextArea, Text, Table } from '@components';\nimport { Playground } from 'docz';\nimport { Props } from './config';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst TagVersion = makeShortcode(\"TagVersion\");\nconst Explain = makeShortcode(\"Explain\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h2 {...{\n      \"id\": \"input\"\n    }}>{`Input`}</h2>\n    <TagVersion component=\"Input\" mdxType=\"TagVersion\" />\n    <h2 {...{\n      \"id\": \"use-and-import\"\n    }}>{`Use and Import`}</h2>\n    <Explain component=\"Input\" isCopyable mdxType=\"Explain\" />\n    <h2 {...{\n      \"id\": \"tips\"\n    }}>{`Tips`}</h2>\n    <Text status=\"error\" mdxType=\"Text\">Input / Textarea share a common component, which needs to be distinguished by inputType</Text>\n    <Text status=\"error\" mdxType=\"Text\">输入框和文本框共用一个组件，需要使用 inputType 参数进行区分</Text>\n    <h2 {...{\n      \"id\": \"case\"\n    }}>{`Case`}</h2>\n    <Playground __position={3} __code={'() => {\\n  const [value, setValue] = useState(\\'\\')\\n  return (\\n    <>\\n      <div style={{ display: \\'flex\\' }}>\\n        Input Value:{\\' \\'}\\n        <Text style={{ marginLeft: 10 }} status=\\\"success\\\">\\n          {value}\\n        </Text>\\n      </div>\\n      <Input\\n        value={value}\\n        onChange={e => setValue(e.target.value)}\\n        placeholder=\\\"Input\\\"\\n      />\\n      <TextArea\\n        value={value}\\n        inputType=\\\"textarea\\\"\\n        placeholder=\\\"TextArea\\\"\\n        onChange={e => setValue(e.target.value)}\\n      />\\n    </>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Input,\n      TextArea,\n      Text,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Input / TextArea\" mdxType=\"Playground\">\n  {() => {\n        const [value, setValue] = useState('');\n        return <>\n          <div style={{\n            display: 'flex'\n          }}>Input Value: <Text style={{\n              marginLeft: 10\n            }} status=\"success\" mdxType=\"Text\">{value}</Text></div>\n          <Input value={value} onChange={e => setValue(e.target.value)} placeholder=\"Input\" mdxType=\"Input\" />\n          <TextArea value={value} inputType=\"textarea\" placeholder=\"TextArea\" onChange={e => setValue(e.target.value)} mdxType=\"TextArea\" />\n        </>;\n      }}\n    </Playground>\n    <Playground __position={4} __code={'<Input placeholder=\\\"none\\\" />\\n<Input status=\\\"success\\\" placeholder=\\\"success\\\" />\\n<TextArea\\n  inputType=\\\"textarea\\\"\\n  status=\\\"warning\\\"\\n  placeholder=\\\"textarea placeholder\\\"\\n/>\\n<Input status=\\\"error\\\" placeholder=\\\"error\\\" />\\n<Input disabled placeholder=\\\"disabled\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Input,\n      TextArea,\n      Text,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Status\" mdxType=\"Playground\">\n  <Input placeholder=\"none\" mdxType=\"Input\" />\n  <Input status=\"success\" placeholder=\"success\" mdxType=\"Input\" />\n  <TextArea inputType=\"textarea\" status=\"warning\" placeholder=\"textarea placeholder\" mdxType=\"TextArea\" />\n  <Input status=\"error\" placeholder=\"error\" mdxType=\"Input\" />\n  <Input disabled placeholder=\"disabled\" mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={5} __code={'<Input\\n  addonBefore={\\n    <div\\n      style={{\\n        width: 150,\\n        display: \\'flex\\',\\n        height: \\'100%\\',\\n        alignItems: \\'center\\',\\n        fontWeight: \\'bold\\',\\n      }}\\n    >\\n      Before Suffix\\n    </div>\\n  }\\n/>\\n<Input\\n  inputType=\\\"textarea\\\"\\n  addonAfter={\\n    <div\\n      style={{\\n        width: 150,\\n        display: \\'flex\\',\\n        height: \\'100%\\',\\n        alignItems: \\'center\\',\\n        fontWeight: \\'bold\\',\\n        justifyContent: \\'center\\',\\n      }}\\n    >\\n      After Suffix\\n    </div>\\n  }\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Input,\n      TextArea,\n      Text,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Suffix\" mdxType=\"Playground\">\n  <Input addonBefore={<div style={{\n        width: 150,\n        display: 'flex',\n        height: '100%',\n        alignItems: 'center',\n        fontWeight: 'bold'\n      }}>\n        Before Suffix\n      </div>} mdxType=\"Input\" />\n  <Input inputType=\"textarea\" addonAfter={<div style={{\n        width: 150,\n        display: 'flex',\n        height: '100%',\n        alignItems: 'center',\n        fontWeight: 'bold',\n        justifyContent: 'center'\n      }}>\n        After Suffix\n      </div>} mdxType=\"Input\" />\n    </Playground>\n    <Playground __position={6} __code={'<>\\n  {[\\'text\\', \\'time\\', \\'checkbox\\', \\'password\\', \\'date\\', \\'email\\'].map(type => (\\n    <Input\\n      key={type}\\n      placeholder={type}\\n      type={type}\\n      addonBefore={\\n        <div\\n          style={{\\n            width: 100,\\n            display: \\'flex\\',\\n            height: \\'100%\\',\\n            alignItems: \\'center\\',\\n            fontWeight: \\'bold\\',\\n          }}\\n        >\\n          {type}\\n        </div>\\n      }\\n    />\\n  ))}\\n</>'} __scope={{\n      props,\n      DefaultLayout,\n      Input,\n      TextArea,\n      Text,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"Input Type\" mdxType=\"Playground\">\n  <>\n    {['text', 'time', 'checkbox', 'password', 'date', 'email'].map(type => <Input key={type} placeholder={type} type={type} addonBefore={<div style={{\n          width: 100,\n          display: 'flex',\n          height: '100%',\n          alignItems: 'center',\n          fontWeight: 'bold'\n        }}> \n            {type} \n          </div>} mdxType=\"Input\" />)}\n  </>\n    </Playground>\n    <Playground __position={7} __code={'<TextArea inputType=\\\"textarea\\\" theme=\\\"dark\\\" />\\n<Input theme=\\\"dark\\\" status=\\\"success\\\" placeholder=\\\"dark\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Input,\n      TextArea,\n      Text,\n      Table,\n      Playground,\n      Props,\n      DefaultLayout,\n      _frontmatter\n    }} wrapper=\"theme\" mdxType=\"Playground\">\n  <TextArea inputType=\"textarea\" theme=\"dark\" mdxType=\"TextArea\" />\n  <Input theme=\"dark\" status=\"success\" placeholder=\"dark\" mdxType=\"Input\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <>\n  {[Props.public, Props.input, Props.textarea].map(({\n        columns,\n        data,\n        footer\n      }) => <div style={{\n        marginTop: 20\n      }}>\n        <Table theme=\"dark\" columns={columns} data={data} footer={() => <div style={{\n          height: 60,\n          borderTop: '4px solid white',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center'\n        }}>\n              {footer}\n            </div>} mdxType=\"Table\" />\n      </div>)}\n    </>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}